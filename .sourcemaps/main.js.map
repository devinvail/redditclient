{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/settings/settings.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/data.ts","../../src/providers/reddit.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 160;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 160\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 205;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 205\n// module chunks = 0","import {Component} from '@angular/core';\nimport {NavController, ModalController} from 'ionic-angular';\nimport {Http} from '@angular/http';\nimport { SettingsPage } from '../settings/settings';\nimport { Data } from '../../providers/data';\nimport { Reddit } from '../../providers/reddit'\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { FormControl } from '@angular/forms';\n\nimport { InAppBrowser, InAppBrowserOptions } from '@ionic-native/in-app-browser/ngx';\nimport { jsonpFactory } from '@angular/http/src/http_module';\nimport { JsonPipe } from '@angular/common';\nimport { stringify } from '@angular/core/src/util';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n})\nexport class HomePage {\n  posts: Array<any>;\n  gifs: Array<string> = [];\n  foo: any;\n  obj: any;\n  settings = ['hot', 'new', 'controversial', 'top', 'rising'];\n  subredditValue: string;\n  subredditControl: FormControl;\n  modalCtrl: ModalController;\n  redditService: Reddit;\n\n  constructor(public navCtrl: NavController, public http: Http, private inAppBrowser: InAppBrowser) {\n          this.subredditControl = new FormControl();\n    this.http\n      .get('https://www.reddit.com/r/motorcycles/hot/.json?limit=100')\n      .map(res => res.json())\n      .subscribe(\n        data => {\n          this.posts = data.data.children;\n          for (let i = 0; i <= this.posts.length - 1; i++) {\n            console.log('url: ', data.data.children[i].data.url);\n            let obj = data.data.children[i].data;\n            this.foo = obj['post_hint'];\n            let fooVid = obj['url'];\n\n            if (obj['post_hint'] == 'image') {\n              console.log('valid post: ' + JSON.stringify(obj));\n              this.gifs.push(obj);\n            }\n            console.log('this.gifs: ' + this.gifs);\n          }\n        },\n        err => {\n          console.log('Oops!');\n        }\n      );\n  }\n\n  showComments(post): void {\n    // let browser: InAppBrowser = new InAppBrowser('http://reddit.com' + post.data.permalink, '_system');\n\n    let browser = this.inAppBrowser.create('http://reddit.com' + post.data.permalink, '_system');\n\n\n  }\n\n  openSettings(): void {\n\n    let settingsModal = this.modalCtrl.create(SettingsPage, {\n      perPage: this.redditService.perPage,\n      sort: this.redditService.sort,\n      subreddit: this.redditService.subreddit\n    });\n\n    settingsModal.onDidDismiss(settings => {\n\n      if(settings){\n        // this.redditService.perPage = settings.perPage;\n        // this.redditService.sort = settings.sort;\n        // this.redditService.subreddit = settings.subreddit;\n\n        // this.dataService.save(settings);\n        // this.changeSubreddit();\n      }\n\n    });\n\n    settingsModal.present();\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { ViewController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n\n  perPage: number;\n  sort: string;\n  subreddit: string;\n\n  constructor(public view: ViewController, public navParams: NavParams) {\n\n    this.perPage = this.navParams.get('perPage');\n    this.sort = this.navParams.get('sort');\n    this.subreddit = this.navParams.get('subreddit');\n    \n  }\n\n  save(): void {\n\n  \tlet settings = {\n  \t\tperPage: this.perPage,\n  \t\tsort: this.sort,\n  \t\tsubreddit: this.subreddit\n  \t};\n\n  \tthis.view.dismiss(settings);\n  }\n\n  close(): void {\n  \tthis.view.dismiss();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {HttpModule} from '@angular/http';\nimport {NgModule, ErrorHandler} from '@angular/core';\nimport {IonicApp, IonicModule, IonicErrorHandler} from 'ionic-angular';\nimport {MyApp} from './app.component';\nimport {HomePage} from '../pages/home/home';\n\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {Data} from '../providers/data';\nimport {Reddit} from '../providers/reddit';\nimport { SettingsPage } from '../pages/settings/settings';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n\n@NgModule({\n  declarations: [MyApp, HomePage, SettingsPage],\n  imports: [BrowserModule, HttpModule, IonicModule.forRoot(MyApp)],\n  bootstrap: [IonicApp],\n  entryComponents: [MyApp, HomePage],\n  providers: [\n    Storage,\n    Data,\n    Reddit,\n    StatusBar,\n    InAppBrowser,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n  ],\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Injectable()\nexport class Data {\n\n  constructor(public storage: Storage) {\n\n  }\n\n  getData(): Promise<any> {\n    return this.storage.get('settings');\n  }\n\n  save(data): void {\n    let newData = JSON.stringify(data);\n    this.storage.set('settings', newData);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class Reddit {\n\n  settings: any;\n  loading: boolean = false;\n  posts: any = [];\n  subreddit: string = 'gifs';\n  page: number = 1;\n  perPage: number = 15;\n  after: string;\n  stopIndex: number;\n  sort: string = 'hot'\n  moreCount: number = 0;\n\n  constructor(public http: Http) {\n\n  }\n\n  fetchData(): void {\n\n    //Build the URL that will be used to access the API based on the users current preferences\n    let url = 'https://www.reddit.com/r/' + this.subreddit + '/' + this.sort + '/.json?limit='+ this.perPage;\n\n    //If we aren't on the first page, we need to add the after parameter so that we only get new results\n    //this parameter basically says \"give me the posts that come AFTER this post\"\n    if(this.after){\n      url += '&after=' + this.after;\n    }\n\n    //We are now currently fetching data, so set the loading variable to true\n    this.loading = true;\n\n    //Make a Http request to the URL and subscribe to the response\n    this.http.get(url).map(res => res.json()).subscribe(data => {\n\n      let stopIndex = this.posts.length;\n      this.posts = this.posts.concat(data.data.children);\n\n      //Loop through all NEW posts that have been added. We are looping through\n      //in reverse since we are removing some items.\n      for(let i = this.posts.length - 1; i >= stopIndex; i--){\n\n        let post = this.posts[i];\n\n        //Add a new property that will later be used to toggle a loading animation\n        //for individual posts\n        post.showLoader = false;\n        post.alreadyLoaded = false;\n\n        //Add a NSFW thumbnail to NSFW posts\n        if(post.data.thumbnail == 'nsfw'){\n          this.posts[i].data.thumbnail = 'images/nsfw.png';\n        }\n\n          /*\n          * Remove all posts that are not in the .gifv or .webm format and convert the ones that\n          * are to .mp4 files.\n          */\n        if(post.data.url.indexOf('.gifv') > -1 || post.data.url.indexOf('.webm') > -1){\n          this.posts[i].data.url = post.data.url.replace('.gifv', '.mp4');\n          this.posts[i].data.url = post.data.url.replace('.webm', '.mp4');\n\n              //If a preview image is available, assign it to the post as 'snapshot'\n          if(typeof(post.data.preview) != \"undefined\"){\n            this.posts[i].data.snapshot = post.data.preview.images[0].source.url.replace(/&amp;/g, '&');\n\n                //If the snapshot is undefined, change it to be blank so it doesnt use a broken image\n            if(this.posts[i].data.snapshot == \"undefined\"){\n              this.posts[i].data.snapshot = \"\";\n            }\n          }\n          else {\n            this.posts[i].data.snapshot = \"\";\n          }\n        }\n        else {\n          this.posts.splice(i, 1);\n        }\n      }\n\n      //Keep fetching more GIFs if we didn't retrieve enough to fill a page\n      //But give up after 20 tries if we still don't have enough\n      if(data.data.children.length === 0 || this.moreCount > 20){\n\n        this.moreCount = 0;\n        this.loading = false;\n\n      }\n      else {\n\n        this.after = data.data.children[data.data.children.length - 1].data.name;\n\n        if(this.posts.length < this.perPage * this.page){\n          this.fetchData();\n          this.moreCount++;\n        } \n        else {\n      this.loading = false;\n          this.moreCount = 0;\n        }\n      }\n\n    }, (err) => {\n      //Fail silently, in this case the loading spinner will just continue to display\n      console.log(\"subreddit doesn't exist!\");\n    });\n\n  }\n\n  nextPage(){\n    this.page++;\n    this.fetchData();   \n  }\n\n  resetPosts(){\n    this.page = 1;\n    this.posts = [];\n    this.after = null;\n    this.fetchData();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/reddit.ts"],"sourceRoot":""}